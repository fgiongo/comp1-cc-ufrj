Computação 1
Lista 3
Fernando Giongo Oliveira

Questão 1.

a) X = 9
b) X = 4
c) X = -5
d) X = 18.3
e) X = -8
f) X = 0

Questão 2.

a) TRUE
b) TRUE
c) FALSE
d) TRUE

Questão 3.

Saída:
Valores de x -11, y 11 e z 10

Questão 4.
a) -12.0
b) FALSE
c) TRUE
d) TRUE
e) FALSE
f) 8.0
g) FALSE
h) FALSE

Para resoluções justificadas "a mão", passo a passo, ver abaixo

Questão 1.

int A = 5;
int B = 10;
int C = -8;
float D = 1.5;
int L = 0;

a) X = 2 * A % 3 - C
	Resultado: X = 9

	prioridade 2: * multiplicação
		      % módulo
	da esquerda para a direita, primeiro a multiplicação:
	X = 2 * 5 % 3 - -8
	= 10 % 3 - -8

	depois, o módulo
	X = 10 % 3 - -8
	  = 1 - -8

	prioridade 3: - subtração
	X = 1 - -8
	  = 9
	
	prioridade 13: = atribuição
	X = 9

b) X = (-2 * C) / 4
	Resultado: X = 4

	prioridade 0: () agrupamento
	X = (-2 * -8) / 4
	= (-2 * -8)

		prioridade 2: * multiplicação
		(-2 * -8)
		= 16

	prioridade 2: / divisão 
	X = 16 / 4
	= 4

	prioridade 13: = atribuição
	X = 4

c) X = ((B / 3) / 3) + D * C / 2
	Resultado: X = -5

	prioridade 0: () agrupamento
	X = ((10 / 3) / 3) + 1.5 * -8 / 2
	= ((10 / 3) / 3)

		prioridade 0: () agrupamento
		((10 / 3) / 3)
		= (10 / 3)

			prioridade 2: / divisão
			10 / 3
			= 3

	prioridade 2: / divisão
	X = 3 / 3
	= 1

	prioridade 2: * multiplicação
		      / divisão
	da esquerda para a direita, primeiro a multiplicação:
	X = 1 + 1.5 * -8 / 2
	= 1 + -12.0 / 2

	depois a divisão:
	X = 1 + -12.0 / 2
	= 1 + -6.0

	prioridade 3: + soma
	X = 1 + -6.0
	= -5.0

	prioridade 13: = atribuição
	X = -5

d) X = (-C * 2) + (D + B) / A
	Resultado:
	se X int, X = 18
	se X float, X = 18.3

	prioridade  0: () agrupamento
	X = (- -8 * 2) + (1.5 + 10) / 5
	
	da esquerda para a direita, primeiro:
	(- -8 * 2)
	
		prioridade 1: - unária aritmética
		(- -8 * 2)
		= (8 * 2)

		prioridade 2: * multiplicação
		(8 * 2)
		= 16

	depois:
	(1.5 + 10)

		prioridade 3: soma
		X = (1.5 + 10)
		X = 11.5

	prioridade 2: / divisão
	X = 16 + 11.5 / 5
	X = 16 + 2.3

	prioridade 3: + soma
	X = 16 + 2.3
	X = 18.3

	prioridade 13: atribuição
	X = 18.3
	se X int, X = 18
	se X float, X = 18.3

e) X = A * C & (L | B)
	Resultado: X = -8

	prioridade 0: () agrupamento
	X = 5 * -8 & (0 | 10)
	= (0 | 10)

		prioridade 9: | ou bit a bit
		0 | 10
		= 10

	prioridade 2: * multiplicação
	X = 5 * -8 & 10
	= -40 & 10

	prioridade 7: & e bit a bit
	X = -40 & 10

		representação de -40:

		representação de 40 binário:
		0000 0000 0010 1000

		representação de -40 em complemento a 2:
		1111 1111 1101 0111
				 +1
		-------------------
		1111 1111 1101 1000

		operação &:
		1111 1111 1101 1000
	      & 0000 0000 0000 1010
		-------------------
		0000 0000 0000 1000

		complemento a 2 do resutado
		0000 0000 0000 1000
		1111 1111 1111 0111
		                 +1
		-------------------
		1111 1111 1111 1000
		= -8

	= -8

	prioridade 13: = atribuições
	X = -8

f) X = (! L + A < C | C + C * B >= 1 & 1)
	Resultado: X = 0

	prioridade 0: () agrupamento
	X = (!0 + 5 < -8 | -8 + -8 * 10 >= 1 & 1)
	= !0 + 5 < -8 | -8 + -8 * 10 >= 1 & 1

		prioridade 1: ! unárias lógicas
		!0 + 5 < -8 | -8 + -8 * 10 >= 1 & 1
		= inteiro_positivo + 5 < -8 | -8 + -8 * 10 >= 1 & 1

		prioridade 2: * multiplicação	
		inteiro_positivo + 5 < -8 | -8 + -8 * 10 >= 1 & 1
		= inteiro_positivo + 5 < -8 | -8 + -80 >= 1 & 1

		prioridade 3: + soma
		1 + 5 < -8 | -8 + -80 >= 1 & 1
		= inteiro_positivo < -8 | -88 >= 1 & 1

		prioridade 5: < operadores relacionais
		              >=
		inteiro_positivo < -8 | -88 >= 1 & 1
		= 0 | 0 & 1

		prioridade 7: & e bit a bit
		0 | 0 & 1
		= 0 | 0

		prioridade 9: | ou bit a bit
		0 | 0
		= 0

	prioridade 13: = atribuições	
	X = 0

Questão 02

a) ((10 > 5) || (5 > 10))
	Resutado: TRUE

	prioridade 0: () agrupamento
	((10 > 5) || (5 > 10))
	= (10 > 5) || (5 > 10)

		prioridade 0: () agrupamento
		da esquerda para a direita:
		(10 > 5) || (5 > 10)
		= 10 > 5
		= TRUE

		da esquerda para a direita:
		TRUE || (5 > 10)
		= (5 > 10)
		= FALSE

	= TRUE || FALSE
	= TRUE

b) (!(5 == 6) && (5 != 6) && ((2 > 1) || (5 <= 4)))
	Resultado: TRUE

	prioridade 0: () agrupamento
	(!(5 == 6) && (5 != 6) && ((2 > 1) || (5 <= 4)))
	= !(5 == 6) && (5 != 6) && ((2 > 1) || (5 <= 4))

		prioridade 0: () agrupamento
		!(5 == 6) && (5 != 6) && ((2 > 1) || (5 <= 4))

			da esquerda para a direita:
			5 == 6
			= FALSE 
	
			da esquerda para a direita:
			5 != 6
			= TRUE
	
			da esquerda para a direita
			(2 > 1) || (5 <= 4)
	
			prioridade 0: () agrupamento
			(2 > 1) || (5 <= 4)
	
				prioridade 0: () agrupamento
				(2 > 1) || (5 <= 4)

				da esquerda para a direita:
				2 > 1
				= TRUE
	
				da esquerda para a direita:
				5 <= 4
				= FALSE
	
			= TRUE || FALSE
			= TRUE

		= !FALSE && TRUE && TRUE

		prioridade 1: ! unárias lógicas
		!FALSE && TRUE && TRUE
		= TRUE && TRUE && TRUE

		= TRUE
	= TRUE

c) (11 > 2) && (5 > 30)
	Resultado: FALSE

	prioridade 0: () agrupamento
	(11 > 2) && (5 > 30)

		da equerda para a direita:
		11 > 2
		= TRUE

		da esquerda para a direita:
		5 > 30
		= FALSE

	= TRUE && FALSE

	= FALSE

d) (11 > 2) || (3 > 30)
	Resultado: TRUE

	prioridade 0: () agrupamento
	(11 > 2) || (3 > 30)

		da esquerda para a direita:
		11 > 2
		= TRUE

		da esquerda para a direita:
		3 > 30
		= FALSE

	= TRUE || FALSE

	= TRUE

Questão 3

linha   x       	y       z
1       lixo    	lixo    lixo
2       10      	10      lixo
3       11      	10      lixo
3       11      	10      11
4       -11     	10      11
5       -11     	11      11
6       -11 + 11 - 11   11      11
6       -11             11      10

Saída:
Valores de x -11, y 11 e z 10

Questão 4

x = 6.0
y = 2
z = 4.0
a = 8
b = 7.5
c = 12

a) x - y * ++a
	Resultado: -12.0

	prioridade 1: ++ unárias aritméticas
	6.0 - 2 * ++8
	= 6.0 - 2 * 9

	prioridade 2: * multiplicação
	6.0 - 2 * 9
	= 6.0 - 18

	prioridade 3: - subtração
	6.0 - 18
	= -12.0

b) x - y * a > c % y
	Resultado: FALSE

	prioridade 2: * multiplicação
	6.0 - 2 * 8 > 12 % 2
	= 6.0 - 16 > 12 % 2

	prioridade 2: % módulo
	6.0 - 16 > 12 % 2
	= 6.0 - 16 > 0

	prioridade 3: - subtração
	6.0 - 16 > 0
	= -10.0 > 0

	prioridade 5: > operador relacional
	-10.0 > 0
	= FALSE

c) y != c
	Resultado: TRUE

d) c % y <= y % c
	Resultado: TRUE

	prioridade 2: % módulo
	12 % 2 <= 2 % 12
	= 0 <= 2 % 12
	= 0 <= 2

	prioridade 5: <= operador relacional
	0 <= 2
	= TRUE

e) !(a > b)
	Resultado: FALSE

	prioridade 0: () agrupamento
	!(8 > 7.5)
	= 8 > 7.5

		prioridade 5: > operador relacional
		8 > 7.5
		= TRUE

	prioridade 1: ! unária lógica
	!TRUE
	= FALSE

f) ((z / a) + b * --y)
	Resultado: 8.0

	prioridade 0: () agrupamento
	((4.0 / 8) + 7.5 * --2)
	= (4.0 / 8) + 7.5 * --2

		prioridade 0: () agrupamento
		(4.0 / 8) + 7.5 * --2

			prioridade 2: / divisão
			4.0 / 8
			= 0.5

		prioridade 1: -- unária aritmética
		0.5 + 7.5 * --2
		= 0.5 + 7.5 * 1

		prioridade 2: * multiplicação
		0.5 + 7.5 * 1
		= 0.5 + 7.5

		prioridade 3: + soma
		0.5 + 7.5
		= 8.0

	= 8.0

g) (c = 7) || (b < 2)
	Resultado: FALSE

	prioridade 0: () agrupamento
	(c = 7) || (7.5 < 2)

		prioridade 13: = atribuição
		c = 7
	
	prioridade 0: () agrupameto
	7 || (b < 2)

		prioridade 5: < operador relacional
		7.5 < 2
		= FALSE

	prioridade 11: || ou
	7 || FALSE
	= FALSE

h) (c = 7) && (7.5 < 2)
	Resultado: FALSE

	prioridade 0: () agrupamento
	(c = 7) && (7.5 < 2)

		prioridade 13: = atribuição
		c = 7
	
	prioridade 0: () agrupameto
	7 && (b < 2)

		prioridade 5: < operador relacional
		7.5 < 2
		= FALSE

	prioridade 10: && e
	7 && FALSE
	= FALSE
